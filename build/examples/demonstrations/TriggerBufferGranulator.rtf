{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\fs24 \cf2 //Sam Pluta - 2006\cf3 \
\cf2 //this Synth uses the AudioIn as a trigger to step through and granulate the loaded buffer\cf3 \
\
s.boot;\
b = \cf4 Buffer\cf3 .read(s, 
\f1\fs18 \cf5 "sounds/a11wlk01.wav"
\f0\fs24 \cf3 );  \cf2 //use your own buffer here - mine is probably not on your computer\cf3 \
\
(\
\cf4 SynthDef\cf3 (\cf5 "TriggerBufferGranular"\cf3 , \{\cf4 arg\cf3  out=0, bufnum=0, in=1, thresh = 0.004, ampScaler = 1, duration = \
0.2, pan=0,centerPosition=0.1, interp=1, incrementBy = 200;\
	\
	\cf4 var\cf3  trig, amp, gatedAmp, triggerBool, outamp, bufferFrames, bufRateScale;\
	\cf4 var\cf3  bufPointer, trigs, env, envGens, \cf0 outArray\cf3 , grNum;\
\
	grNum = 4; \cf2 // the number of granulators in the synthdef\cf3 \
	bufferFrames = \cf4 BufFrames\cf3 .kr(bufnum);\
	bufRateScale = \cf4 BufRateScale\cf3 .kr(bufnum);\
	amp = \cf4 Amplitude\cf3 .kr (\cf4 AudioIn\cf3 .ar(in));\
	triggerBool = (\cf4 AudioIn\cf3 .ar(in) >= thresh);\
	gatedAmp = \cf4 Latch\cf3 .kr(amp, triggerBool);\
	outamp = (gatedAmp * ampScaler);\
\
	trig = \cf4 Trig\cf3 .kr(triggerBool, duration/4);  \cf2 //makes a trigger if triggerBool goes over the threshold\cf3 \
	env = \cf4 Env\cf3 ([0,1,0],[duration/2,duration/2],\cf6 'sine'\cf3 );\
\
	bufPointer = \cf4 PulseCount\cf3 .kr(trig);  \cf2 //a counter that counts the number of triggers triggered\cf3 \
\
	\cf2 //each trigger below triggers once for every four times trig (above) triggers (if a trig trig could trig trig)\cf3 \
	\
	trigs = \cf4 Array\cf3 .fill(grNum, \{\cf4 |i|\cf3  \cf4 PulseDivider\cf3 .kr(trig, 4, i )\});\
	envGens = \cf4 Array\cf3 .fill(grNum, \{\cf4 |i|\cf3  \cf4 EnvGen\cf3 .kr(env, trigs[i] ) \});\
\
	\cf2 //trigs correspond to and trigger a PlayBuf below - the pointer slowly moves through the file\cf3 \
	outArray = \cf4 Array\cf3 .fill(grNum, \{\cf4 |i|\cf3  \cf4 PlayBuf\cf3 .ar(1, bufnum, bufRateScale, trigs[i], (bufPointer*incrementBy)%bufferFrames)*envGens[i]\});\
\
	\cf4 Out\cf3 .ar(out, \cf4 Pan2\cf3 .ar(\cf4 Mix\cf3 (\cf0 outArray\cf3 )));\
	\
\}).play(s,[\cf6 \\out\cf3 , 0, \cf6 \\bufnum\cf3 , b.bufnum]);\
)}