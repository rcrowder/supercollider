{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 \
\cf3 /*\
\
Diamond by James McCartney\
\
\
\
Partch "otonalities" (i.e. a set of ratios with the same denominator \
and changing numerator, i.e. overtone series) run horizontally.\
\
Partch "utonalities" (i.e. a set of ratios with the same numerator and \
changing denominator, a.k.a. undertone series) run vertically.\
\
The ratio between a pair of buttons in any two columns is the same for \
any row in those columns.\
The ratio between a pair of buttons in any two rows is the same for any \
column in those rows.\
..there must be a less confusing way of stating that...\
a set of buttons pressed in one row will be a transposition of the same \
columns' buttons pressed in any row.\
a set of buttons pressed in one column will be a transposition of the \
same rows' buttons pressed in any column.\
\
*/\cf2 \
\
\
s.boot;\
\
(\
\cf4 var\cf2  w, buttons;\
\cf4 var\cf2  series, series2;\
\
\cf4 SynthDef\cf2 (\cf5 "tone"\cf2 , \{ \cf4 arg\cf2  freq = 440, amp=0.1, gate =1;\
	\cf4 var\cf2  tone, env;\
	env = \cf4 Linen\cf2 .kr(gate, 0.01, amp, 0.2, 2);\
	tone = \cf4 OnePole\cf2 .ar(\cf4 Saw\cf2 .ar(freq + \{\cf4 Rand\cf2 (-0.05,0.05)\}.dup, env), 0.95);\
	\cf4 Out\cf2 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = 4 * (series ++ 16);\
\
w = \cf4 GUI\cf2 .window.new(\cf5 "diamond"\cf2 , \cf4 Rect\cf2 (200,200,460,560));\
w.view.decorator = \cf4 FlowLayout\cf2 (w.view.bounds);\
\
series2.reverse.do \{\cf4 |denom|\cf2 \
	series.do \{\cf4 |numer|\cf2 \
		\cf4 var\cf2  rnumer, rdenom;\
		\cf4 var\cf2  b, gcd, label, ratio, id, freq;\
		\cf4 var\cf2  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf4 GUI\cf2 .button.new(w, 50 @ 20);\
		label = rnumer.asString ++ \cf5 " / "\cf2  ++ rdenom;\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \{\cf4 Color\cf2 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \{\cf4 Color\cf2 .yellow(1,0.4)\}\{\cf4 Color\cf2 .clear\}\};\
		b.states = [[label, \cf4 Color\cf2 .black, color],[label, \cf4 Color\cf2 .white, \cf4 Color\cf2 .black]];\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf6 \\s_new\cf2 , \cf6 \\tone\cf2 , id = s.nextNodeID, 0, 1, \cf6 \\freq\cf2 , freq);\
				[\cf6 \\on\cf2 , rnumer, rdenom].postln\
			\}\{\
				s.sendMsg(\cf6 \\n_set\cf2 , id, \cf6 \\gate\cf2 , 0);\
				[\cf6 \\off\cf2 , rnumer, rdenom].postln\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\
\
\
\
\
\
\cf3 ////////////////////////\cf2 \
\
\
\
\
\
\
\
\
\cf3 // alternate, horizontal layout:\cf2 \
\
s.boot;\
\
(\
\cf4 var\cf2  w, buttons;\
\cf4 var\cf2  series, series2;\
\
\cf4 SynthDef\cf2 (\cf5 "tone"\cf2 , \{ \cf4 arg\cf2  freq = 440, amp=0.1, gate =1;\
	\cf4 var\cf2  tone, env;\
	env = \cf4 Linen\cf2 .kr(gate, 0.01, amp, 0.2, 2);\
	\cf3 //tone = OnePole.ar(Saw.ar(freq + \{Rand(-0.05,0.05)\}.dup, env), 0.95);\cf2 \
	tone = \cf4 OnePole\cf2 .ar(\cf4 Saw\cf2 .ar(freq + \{\cf4 Rand\cf2 (-0.05,0.05)\}.dup, env), 0.8);\
	\cf4 Out\cf2 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = (series ++ 16);\
\
w = \cf4 GUI\cf2 .window.new(\cf5 "diamond"\cf2 , \cf4 Rect\cf2 (50,200,980,220));\
w.view.decorator = \cf4 FlowLayout\cf2 (w.view.bounds);\
\
series.reverse.do \{\cf4 |denom|\cf2 \
	series2.do \{\cf4 |numer|\cf2 \
		\cf4 var\cf2  rnumer, rdenom;\
		\cf4 var\cf2  b, gcd, label, ratio, id, freq;\
		\cf4 var\cf2  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf4 GUI\cf2 .button.new(w, 40 @ 20);\
		label = rnumer.asString ++ \cf5 "/"\cf2  ++ rdenom;\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \
\{\cf4 Color\cf2 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \
\{\cf4 Color\cf2 .yellow(1,0.4)\}\{\cf4 Color\cf2 .clear\}\};\
		b.states = [[label, \cf4 Color\cf2 .black, color],[label, \cf4 Color\cf2 .white, \
\cf4 Color\cf2 .black]];\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf6 \\s_new\cf2 , \cf6 \\tone\cf2 , id = s.nextNodeID, 0, 1, \cf6 \\freq\cf2 , freq);\
			\}\{\
				s.sendMsg(\cf6 \\n_set\cf2 , id, \cf6 \\gate\cf2 , 0);\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\cf3 //////////////////////////////\cf2 \
\
\
\
\cf3 // This one displays the cyclic cents values for the ratios.\cf2 \
\
\
\
s.boot;\
\
(\
\cf4 var\cf2  w, buttons, buttonFont;\
\cf4 var\cf2  series, series2;\
\
\cf4 SynthDef\cf2 (\cf5 "tone"\cf2 , \{ \cf4 arg\cf2  freq = 440, amp=0.1, gate =1;\
	\cf4 var\cf2  tone, env;\
	env = \cf4 Linen\cf2 .kr(gate, 0.01, amp, 0.2, 2);\
	\cf3 //tone = OnePole.ar(Saw.ar(freq + \{Rand(-0.05,0.05)\}.dup, env), 0.95);\cf2 \
	tone = \cf4 OnePole\cf2 .ar(\cf4 Saw\cf2 .ar(freq + \{\cf4 Rand\cf2 (-0.05,0.05)\}.dup, env), 0.8);\
	\cf4 Out\cf2 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = (series ++ 16);\
\
w = \cf4 GUI\cf2 .window.new(\cf5 "diamond"\cf2 , \cf4 Rect\cf2 (50,200,980,370), resizable: \cf4 false\cf2 );\
w.view.decorator = \cf4 FlowLayout\cf2 (w.view.bounds);\
\
buttonFont = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , if( \cf4 GUI\cf2 .id === \cf6 \\cocoa\cf2 , 11, 7 )).boldVariant;\
\
series.reverse.do \{\cf4 |denom|\cf2 \
	series2.do \{\cf4 |numer|\cf2 \
		\cf4 var\cf2  rnumer, rdenom;\
		\cf4 var\cf2  b, gcd, label, ratio, id, freq;\
		\cf4 var\cf2  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf4 GUI\cf2 .button.new(w, 40 @ 40);\
		label = rnumer.asString ++ \cf5 " / "\cf2  ++ rdenom ++ \cf5 "\\n"\cf2  ++ \
((ratio.ratiomidi * 100).round.asInteger % 1200);\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \
\{\cf4 Color\cf2 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \
\{\cf4 Color\cf2 .yellow(1,0.4)\}\{\cf4 Color\cf2 .clear\}\};\
		b.states = [[label, \cf4 Color\cf2 .black, color],[label, \cf4 Color\cf2 .white, \
\cf4 Color\cf2 .black]];\
		b.font = buttonFont;\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf6 \\s_new\cf2 , \cf6 \\tone\cf2 , id = s.nextNodeID, 0, 1, \cf6 \\freq\cf2 , freq);\
			\}\{\
				s.sendMsg(\cf6 \\n_set\cf2 , id, \cf6 \\gate\cf2 , 0);\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\
\cf3 /////////////////////////////////\cf2 \
\
\
}