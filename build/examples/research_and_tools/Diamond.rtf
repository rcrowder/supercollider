{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 \
\cf2 /*\
\
Diamond by James McCartney\
\
\
\
Partch "otonalities" (i.e. a set of ratios with the same denominator \
and changing numerator, i.e. overtone series) run horizontally.\
\
Partch "utonalities" (i.e. a set of ratios with the same numerator and \
changing denominator, a.k.a. undertone series) run vertically.\
\
The ratio between a pair of buttons in any two columns is the same for \
any row in those columns.\
The ratio between a pair of buttons in any two rows is the same for any \
column in those rows.\
..there must be a less confusing way of stating that...\
a set of buttons pressed in one row will be a transposition of the same \
columns' buttons pressed in any row.\
a set of buttons pressed in one column will be a transposition of the \
same rows' buttons pressed in any column.\
\
*/\cf0 \
\
\
s.boot;\
\
(\
\cf3 var\cf0  w, buttons;\
\cf3 var\cf0  series, series2;\
\
\cf3 SynthDef\cf0 (\cf4 "tone"\cf0 , \{ \cf3 arg\cf0  freq = 440, amp=0.1, gate =1;\
	\cf3 var\cf0  tone, env;\
	env = \cf3 Linen\cf0 .kr(gate, 0.01, amp, 0.2, 2);\
	tone = \cf3 OnePole\cf0 .ar(\cf3 Saw\cf0 .ar(freq + \{\cf3 Rand\cf0 (-0.05,0.05)\}.dup, env), 0.95);\
	\cf3 Out\cf0 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = 4 * (series ++ 16);\
\
w = \cf3 SCWindow\cf0 (\cf4 "diamond"\cf0 , \cf3 Rect\cf0 (200,200,460,560));\
w.view.decorator = \cf3 FlowLayout\cf0 (w.view.bounds);\
\
series2.reverse.do \{\cf3 |denom|\cf0 \
	series.do \{\cf3 |numer|\cf0 \
		\cf3 var\cf0  rnumer, rdenom;\
		\cf3 var\cf0  b, gcd, label, ratio, id, freq;\
		\cf3 var\cf0  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf3 SCButton\cf0 (w, 50 @ 20);\
		label = rnumer.asString ++ \cf4 " / "\cf0  ++ rdenom;\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \{\cf3 Color\cf0 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \{\cf3 Color\cf0 .yellow(1,0.4)\}\{\cf3 Color\cf0 .clear\}\};\
		b.states = [[label, \cf3 Color\cf0 .black, color],[label, \cf3 Color\cf0 .white, \cf3 Color\cf0 .black]];\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf5 \\s_new\cf0 , \cf5 \\tone\cf0 , id = s.nextNodeID, 0, 1, \cf5 \\freq\cf0 , freq);\
				[\cf5 \\on\cf0 , rnumer, rdenom].postln\
			\}\{\
				s.sendMsg(\cf5 \\n_set\cf0 , id, \cf5 \\gate\cf0 , 0);\
				[\cf5 \\off\cf0 , rnumer, rdenom].postln\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\
\
\
\
\
\
\cf2 ////////////////////////\cf0 \
\
\
\
\
\
\
\
\
\cf2 // alternate, horizontal layout:\cf0 \
\
s.boot;\
\
(\
\cf3 var\cf0  w, buttons;\
\cf3 var\cf0  series, series2;\
\
\cf3 SynthDef\cf0 (\cf4 "tone"\cf0 , \{ \cf3 arg\cf0  freq = 440, amp=0.1, gate =1;\
	\cf3 var\cf0  tone, env;\
	env = \cf3 Linen\cf0 .kr(gate, 0.01, amp, 0.2, 2);\
	\cf2 //tone = OnePole.ar(Saw.ar(freq + \{Rand(-0.05,0.05)\}.dup, env), 0.95);\cf0 \
	tone = \cf3 OnePole\cf0 .ar(\cf3 Saw\cf0 .ar(freq + \{\cf3 Rand\cf0 (-0.05,0.05)\}.dup, env), 0.8);\
	\cf3 Out\cf0 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = (series ++ 16);\
\
w = \cf3 SCWindow\cf0 (\cf4 "diamond"\cf0 , \cf3 Rect\cf0 (50,200,980,220));\
w.view.decorator = \cf3 FlowLayout\cf0 (w.view.bounds);\
\
series.reverse.do \{\cf3 |denom|\cf0 \
	series2.do \{\cf3 |numer|\cf0 \
		\cf3 var\cf0  rnumer, rdenom;\
		\cf3 var\cf0  b, gcd, label, ratio, id, freq;\
		\cf3 var\cf0  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf3 SCButton\cf0 (w, 40 @ 20);\
		label = rnumer.asString ++ \cf4 "/"\cf0  ++ rdenom;\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \
\{\cf3 Color\cf0 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \
\{\cf3 Color\cf0 .yellow(1,0.4)\}\{\cf3 Color\cf0 .clear\}\};\
		b.states = [[label, \cf3 Color\cf0 .black, color],[label, \cf3 Color\cf0 .white, \
\cf3 Color\cf0 .black]];\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf5 \\s_new\cf0 , \cf5 \\tone\cf0 , id = s.nextNodeID, 0, 1, \cf5 \\freq\cf0 , freq);\
			\}\{\
				s.sendMsg(\cf5 \\n_set\cf0 , id, \cf5 \\gate\cf0 , 0);\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\cf2 //////////////////////////////\cf0 \
\
\
\
\cf2 // This one displays the cyclic cents values for the ratios.\cf0 \
\
\
\
s.boot;\
\
(\
\cf3 var\cf0  w, buttons, buttonFont;\
\cf3 var\cf0  series, series2;\
\
\cf3 SynthDef\cf0 (\cf4 "tone"\cf0 , \{ \cf3 arg\cf0  freq = 440, amp=0.1, gate =1;\
	\cf3 var\cf0  tone, env;\
	env = \cf3 Linen\cf0 .kr(gate, 0.01, amp, 0.2, 2);\
	\cf2 //tone = OnePole.ar(Saw.ar(freq + \{Rand(-0.05,0.05)\}.dup, env), 0.95);\cf0 \
	tone = \cf3 OnePole\cf0 .ar(\cf3 Saw\cf0 .ar(freq + \{\cf3 Rand\cf0 (-0.05,0.05)\}.dup, env), 0.8);\
	\cf3 Out\cf0 .ar(0, tone);\
\}).load(s);\
\
series = (8..15);\
series.remove(13);\
\
series2 = series ++ (2 * series) ++ (4 * (series ++ 16));\
series = (series ++ 16);\
\
w = \cf3 SCWindow\cf0 (\cf4 "diamond"\cf0 , \cf3 Rect\cf0 (50,200,980,370), resizable: \cf3 false\cf0 );\
w.view.decorator = \cf3 FlowLayout\cf0 (w.view.bounds);\
\
buttonFont = \cf3 Font\cf0 (\cf4 "Helvetica-Bold"\cf0 , 11);\
\
series.reverse.do \{\cf3 |denom|\cf0 \
	series2.do \{\cf3 |numer|\cf0 \
		\cf3 var\cf0  rnumer, rdenom;\
		\cf3 var\cf0  b, gcd, label, ratio, id, freq;\
		\cf3 var\cf0  color;\
		[numer, denom].post;\
		rnumer = numer;\
		rdenom = denom;\
		gcd = rnumer gcd: rdenom;\
		rnumer = rnumer div: gcd;\
		rdenom = rdenom div: gcd;\
		[rnumer, rdenom].postln;\
		ratio = rnumer / rdenom;\
		freq = 50.midicps * ratio;\
		b = \cf3 SCButton\cf0 (w, 40 @ 40);\
		label = rnumer.asString ++ \cf4 " / "\cf0  ++ rdenom ++ \cf4 "\\n"\cf0  ++ \
((ratio.ratiomidi * 100).round.asInteger % 1200);\
		color = if (rnumer.isPowerOfTwo && rdenom.isPowerOfTwo) \
\{\cf3 Color\cf0 .red(1,0.4)\}\{\
			if(numer.isPowerOfTwo || denom.isPowerOfTwo) \
\{\cf3 Color\cf0 .yellow(1,0.4)\}\{\cf3 Color\cf0 .clear\}\};\
		b.states = [[label, \cf3 Color\cf0 .black, color],[label, \cf3 Color\cf0 .white, \
\cf3 Color\cf0 .black]];\
		b.font = buttonFont;\
		b.action = \{\
			if (b.value == 1) \{\
				s.sendMsg(\cf5 \\s_new\cf0 , \cf5 \\tone\cf0 , id = s.nextNodeID, 0, 1, \cf5 \\freq\cf0 , freq);\
			\}\{\
				s.sendMsg(\cf5 \\n_set\cf0 , id, \cf5 \\gate\cf0 , 0);\
			\};	\
		\};\
	\};\
	w.view.decorator.nextLine;\
\};\
w.front;\
)\
\
\
\
\cf2 /////////////////////////////////\cf0 \
\
\
}