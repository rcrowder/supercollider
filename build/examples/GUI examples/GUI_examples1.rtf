{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 \
\cf3 // GUI examples\cf2 \
\
\cf4 GUI\cf2 .cocoa;	\cf3 // use CocoaGUI (Mac OS X native)\cf2 \
\cf4 GUI\cf2 .swing;	\cf3 // use SwingGUI (Java based GUI)\cf2 \
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
(\
\cf3 // create a window. set properties from a routine.\cf2 \
\cf3 // note: alpha transparency works on Mac OS X only!\cf2 \
\cf4 var\cf2  w, r;\
w = \cf4 GUI\cf2 .window.new(\cf5 "trem"\cf2 , \cf4 Rect\cf2 (512, 256, 360, 130));\
w.front;\
r = \cf4 Routine\cf2 (\{\
	60.do(\{ \cf4 arg\cf2  i;\
		0.05.wait;\
		w.bounds = w.bounds.moveBy(10.rand2, 10.rand2);\
		w.alpha = cos(i*0.1pi)*0.5+0.5;\
	\});\
	1.wait;\
	w.close;\
\});\
\cf4 AppClock\cf2 .play(r);\
)\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
(\
\cf3 // create an array of buttons.\cf2 \
\cf4 var\cf2  w;\
\
w = \cf4 GUI\cf2 .window.new(\cf5 "button panel"\cf2 , \cf4 Rect\cf2 (128, 64, 340, 360));\
w.view.decorator = \cf4 FlowLayout\cf2 (w.view.bounds);\
32.do(\{ \cf4 arg\cf2  i;\
b = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (0,0, 75, 24));\
b.states = [[\cf5 "Start "\cf2 ++i, \cf4 Color\cf2 .black, \cf4 Color\cf2 .rand],[\cf5 "Stop "\cf2 ++i, \cf4 Color\cf2 .white, \cf4 Color\cf2 .red]];\
\
\});\
\cf3 //w.view.background = Color(0.6,0.8,0.8);\cf2 \
w.front;\
)\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
(\
\cf3 // create a GUI window with some NumberBoxes.\cf2 \
\cf3 // You can command click (CocoaGUI) or control click (SwingGUI) on a control\cf2 \
\cf3 // to drag its value to another control\cf2 \
\cf4 var\cf2  w, n, f, s;\
w = \cf4 GUI\cf2 .window.new(\cf5 "number box test"\cf2 , \cf4 Rect\cf2 (128, 64, 260, 80));\
w.view.decorator = f = \cf4 FlowLayout\cf2 (w.view.bounds);\
\
n = \cf4 GUI\cf2 .numberBox.new(w, \cf4 Rect\cf2 (0,0,80,24));\
n.value = 123;\
\
n = \cf4 GUI\cf2 .numberBox.new(w, \cf4 Rect\cf2 (0,0,80,24));\
n.value = 456;\
\
n = \cf4 GUI\cf2 .dragBoth.new(w, \cf4 Rect\cf2 (0,0,80,24));\
n.object = 789;\
\
f.nextLine;\
\
s = \cf4 GUI\cf2 .slider.new(w, \cf4 Rect\cf2 (0,0,240,24));\
\
w.front;\
)\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
(\
\cf3 // create a GUI for a mixer.\cf2 \
\cf4 var\cf2  w, v, s, n;\
\
w = \cf4 GUI\cf2 .window.new(\cf5 "mixer"\cf2 , \cf4 Rect\cf2 (128, 64, 340, 360));\
w.view.decorator = f = \cf4 FlowLayout\cf2 (w.view.bounds,\cf4 Point\cf2 (4,4),\cf4 Point\cf2 (4,2));\
17.do(\{ \cf4 arg\cf2  i;\
	\cf4 var\cf2  v, s, n, spec, p, height = 16;\
	\
	v = \cf4 GUI\cf2 .staticText.new(w, \cf4 Rect\cf2 (0, 0, 56, height+2));\
	if (i == 0, \{\
		v.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 13).boldVariant;\
		v.stringColor = \cf4 Color\cf2 .yellow;\
	\},\{\
		v.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 12);\
		v.stringColor = \cf4 Color\cf2 .white;\
	\});\
	v.align = \cf6 \\right\cf2 ;\
	s = \cf4 GUI\cf2 .slider.new(w, \cf4 Rect\cf2 (0, 0, 182, height));\
	s.resize = 2;\
	spec = \cf6 \\db\cf2 .asSpec;\
	s.action = \{ \
		\cf4 var\cf2  db;\
		db = spec.map(s.value).round(0.1);\
		\cf3 //v.string = if (db < -100, \{ "-inf" \},\{ db.asString ++ " dB" \});\cf2 \
		v.string = db.asString ++ \cf5 " dB"\cf2  ;\
	\};\
	s.action.value;\
\
	n = \cf4 GUI\cf2 .staticText.new(w, \cf4 Rect\cf2 (0, 0, 72, height+2));\
	if (i == 0, \{\
		n.string = \cf5 "Master"\cf2 ;\
		n.stringColor = \cf4 Color\cf2 .yellow;\
		n.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 13).boldVariant;\
	\},\{\
		n.string = \cf5 "Channel "\cf2  ++ i;\
		n.stringColor = \cf4 Color\cf2 .white;\
		n.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 12);\
	\});\
	n.background = \cf4 Color\cf2 .rand(0.1,0.5);\
	n.resize = 3;\
	\
	f.nextLine;\
\});\
w.view.background = \cf4 Color\cf2 .blue;	\cf3 // fallback on SwingOSC\cf2 \
w.view.background = \cf4 HiliteGradient\cf2 (\cf4 Color\cf2 .blue, \cf4 Color\cf2 .green, \cf6 \\h\cf2 , 128, 0.3);\
w.front;\
w.refresh;\
)\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
(\
\cf3 // jumble of controls\cf2 \
\
w = \cf4 GUI\cf2 .window.new;\
\
a = \cf4 GUI\cf2 .slider.new(w, \cf4 Rect\cf2 (20,20,114,24));\
\
b = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (20, 50, 80, 24));\
\
b.states = [[\cf5 "Start Sound"\cf2 , \cf4 Color\cf2 .red, \cf4 Color\cf2 .grey(0.9)],[\cf5 "Stop Sound"\cf2 , \cf4 Color\cf2 .white, \cf4 Color\cf2 .grey(0.4)]];\
\
c = \cf4 GUI\cf2 .dragSource.new(w, \cf4 Rect\cf2 (120, 50, 80, 24));\
c.string = \cf5 "DragSource"\cf2 ;\
c.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 12);\
c.beginDragAction = \{ \cf4 arg\cf2  view; [view.object,view.object]; \};\
\cf3 //c.stringColor = Color(0.5, 0.2, 0.7);\cf2 \
\
\
d = \cf4 GUI\cf2 .dragSink.new(w, \cf4 Rect\cf2 (120, 85, 80, 24));\
d.string = \cf5 "DragSink"\cf2 ;\
\
z = \cf4 GUI\cf2 .compositeView.new(w, \cf4 Rect\cf2 (0,100,800,300));\
\
l = \cf4 GUI\cf2 .slider.new(z, \cf4 Rect\cf2 (20,120,180,24));\
\
\cf3 //l.backColor = Color(0,1,0);\cf2 \
\cf3 //l.knobColor = Color(1,0,0);\cf2 \
l.step = 1/10;\
\
r = \cf4 GUI\cf2 .rangeSlider.new(z, \cf4 Rect\cf2 (20,170,180,24));\
r.step = 1/20;\
\
q = \cf4 GUI\cf2 .rangeSlider.new(z, \cf4 Rect\cf2 (220, 170, 24, 180));\
\
t = \cf4 GUI\cf2 .slider2D.new(w, \cf4 Rect\cf2 (220,20, 80, 80));\
t.action = \{ \cf4 arg\cf2  slider; c.object = slider.y.postln.round(0.001); \};\
\
p = \cf4 GUI\cf2 .slider.new(z, \cf4 Rect\cf2 (248, 170, 24, 180));\
p.action = \{ \cf4 arg\cf2  slider; slider.value.postln; \};\
\
w.front;\
w.refresh;\
)\
\
\cf3 // properties you can set in the window above.\cf2 \
w.view.background = \cf4 Color\cf2 .blue;	\cf3 // fallback on SwingOSC\cf2 \
w.view.background = \cf4 HiliteGradient\cf2 (\cf4 Color\cf2 .blue, \cf4 Color\cf2 .red, \cf6 \\v\cf2 , 128, 0.2);\
r.background = \cf4 Color\cf2 .gray; r.hi = 0.2;\
\
z.visible = \cf4 false\cf2 ;\
z.visible = \cf4 true\cf2 ;\
\
z.enabled = \cf4 false\cf2 ;	\cf3 // NO EFFECT WITH SWINGOSC!\cf2 \
z.enabled = \cf4 true\cf2 ;\
	\
b.visible = \cf4 false\cf2 ;\
b.visible = \cf4 true\cf2 ;\
\
b.enabled = \cf4 false\cf2 ;\
b.enabled = \cf4 true\cf2 ;\
\
c.visible = \cf4 false\cf2 ;\
c.visible = \cf4 true\cf2 ;\
\
b.enabled = \cf4 false\cf2 ;\
b.visible = \cf4 false\cf2 ;\
b.visible = \cf4 true\cf2 ;\
b.enabled = \cf4 true\cf2 ;\
\
t.enabled = \cf4 false\cf2 ;\
t.enabled = \cf4 true\cf2 ;\
t.visible = \cf4 false\cf2 ;\
t.visible = \cf4 true\cf2 ;\
\
r.step = 0;\
\
t.canFocus = \cf4 false\cf2 ;\
t.canFocus = \cf4 true\cf2 ;\
t.canFocus = \cf4 false\cf2 ;\
\
c.object = \cf4 Point\cf2 (3,4);\
\
c.object = [1, 2, 3, 4];\
c.object = 123.456;\
c.object = \cf4 WhiteNoise\cf2 .ar(1);\
c.object = \cf4 WhiteNoise\cf2 ;\
c.object = \cf4 true\cf2 ;\
\
t.resize = 2;\
t.resize = 5;\
t.resize = 7;\
\
w.alpha = 0.7;\
w.close;\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
\cf3 // create a window to start and stop a synth\cf2 \
\
(\
\cf4 SynthDef\cf2 (\cf5 "moto-rev"\cf2 , \{\
	\cf4 var\cf2  x;\
	x = \cf4 RLPF\cf2 .ar(\cf4 LFPulse\cf2 .ar(\cf4 SinOsc\cf2 .kr(0.2, 0, 10, 21), [0,0.1], 0.1), 100, 0.1).clip2(0.4);\
	\cf4 Out\cf2 .ar(0, x);\
\}).writeDefFile;\
)\
\
(\
	\cf4 var\cf2  w, b1, b2, b3, name, a, s;\
	name = \cf5 "moto-rev"\cf2 ;\
	s = \cf4 Server\cf2 .local;\
	w = \cf4 GUI\cf2 .window.new(name.asString, \cf4 Rect\cf2 (128, 64, 260, 80));\
	w.view.decorator = \cf4 FlowLayout\cf2 (w.view.bounds);\
	\
	b1 = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (0,0, 80, 24));\
	b1.states = [[\cf5 "Load"\cf2 , \cf4 Color\cf2 .black, \cf4 Color\cf2 .green]];\
	b1.action = \{ \cf4 arg\cf2  view; \
		s.sendMsg(\cf5 "/d_load"\cf2 , \cf4 SynthDef\cf2 .synthDefDir ++ name ++ \cf5 ".scsyndef"\cf2 );\
	\};\
	b1.enabled = s.serverRunning;\
	\
	b2 = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (0,0, 80, 24));\
	b2.states = [\
		[\cf5 "Play"\cf2 , \cf4 Color\cf2 .black, \cf4 Color\cf2 .green],\
		[\cf5 "Stop"\cf2 , \cf4 Color\cf2 .white, \cf4 Color\cf2 .red],\
	];\
	b2.action = \{ \cf4 arg\cf2  view; \
		if (b2.value == 1, \{\
			s.sendMsg(\cf5 "/s_new"\cf2 , name, 1001, 1, 0);\
		\},\{\
			s.sendMsg(\cf5 "/n_free"\cf2 , 1001);\
		\});\
	\};\
	b2.enabled = s.serverRunning;\
\
	a = \cf4 SimpleController\cf2 (s);\
	f = \{ \cf4 arg\cf2  server; \
		b1.enabled = server.serverRunning;\
		b2.enabled = server.serverRunning;\
	\};\
	a.put(\cf6 \\serverRunning\cf2 , f);\
	w.onClose = \{ \
		a.remove;\
		s.sendMsg(\cf5 "/n_free"\cf2 , 1001);		\
	\};\
	w.front;\
)\
\
s.boot;\
\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
\cf3 // GUI to control a synth\cf2 \
\
(\
\cf4 SynthDef\cf2 (\cf5 "trem"\cf2 , \{ \cf4 arg\cf2  freq=800, rate=8, amp=0.1; \
	\cf4 var\cf2  osc;\
	freq = \cf4 Lag\cf2 .kr(freq, 0.3);\
	osc = \cf4 LFTri\cf2 .ar(freq, 0, \cf4 SinOsc\cf2 .kr( rate + [0,0.1],0,amp).max(0));\
	\cf4 Out\cf2 .ar(0, osc) \
\}).writeDefFile;\
\cf4 Server\cf2 .local.sendMsg(\cf5 "/d_load"\cf2 , \cf4 SynthDef\cf2 .synthDefDir ++ \cf5 "trem.scsyndef"\cf2 );\
)\
\
(\
\cf4 var\cf2  w, f, d, values, server, id, isOn = \cf4 false\cf2 ;\
\cf4 var\cf2  b1, b2, s;\
\
values = \cf4 IdentityDictionary\cf2 .new;\
server = \cf4 Server\cf2 .local;\
\
f = \{ \cf4 arg\cf2  name, spec = \cf6 \\lin\cf2 , guispec;\
	\cf4 var\cf2  height = 20, v, s, n;\
	guispec = guispec ? spec;\
	spec = spec.asSpec;\
	guispec = guispec.asSpec;\
\
	v = \cf4 GUI\cf2 .staticText.new(w, \cf4 Rect\cf2 (0, 0, 72, height));\
	v.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 12);\
	v.stringColor = \cf4 Color\cf2 .black;\
	v.align = \cf6 \\right\cf2 ;\
	\
	s = \cf4 GUI\cf2 .slider.new(w, \cf4 Rect\cf2 (0, 0, 182, height));\
	s.resize = 2;\
	s.action = \{ \
		\cf4 var\cf2  val, guival, step;\
		val = spec.map(s.value);\
		values.put(name, val);\
		if (isOn, \{ server.sendMsg(\cf5 "/n_set"\cf2 , id, name, val); \});\
		guival = guispec.map(s.value);\
		step = pow(10, floor(min(0, guival.abs.log10 - 2)));\
		v.string = guival.round(step).asString ++ guispec.units;\
	\};\
	s.value = spec.unmap(spec.default);\
	s.action.value;\
	\
	n = \cf4 GUI\cf2 .staticText.new(w, \cf4 Rect\cf2 (0, 0, 72, height));	n.string = name;\
	n.stringColor = \cf4 Color\cf2 .black;\
	n.font = \cf4 GUI\cf2 .font.new(\cf5 "Helvetica"\cf2 , 12);\
	n.resize = 3;\
	\
	w.view.decorator.nextLine;\
\};\
\
id = 2001;\
w = \cf4 GUI\cf2 .window.new(\cf5 "trem"\cf2 , \cf4 Rect\cf2 (512, 64, 360, 130));\
w.view.decorator = d = \cf4 FlowLayout\cf2 (w.view.bounds);\
\
b1 = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (0,0, 80, 24));\
b1.states = [[\cf5 "Load"\cf2 , \cf4 Color\cf2 .black, \cf4 Color\cf2 .green]];\
b1.action = \{ \cf4 arg\cf2  view; \
	server.sendMsg(\cf5 "/d_load"\cf2 , \cf5 "synthdefs/trem.scsyndef"\cf2 );\
\};\
b1.enabled = server.serverRunning;\
\
b2 = \cf4 GUI\cf2 .button.new(w, \cf4 Rect\cf2 (0,0, 80, 24));\
b2.states = [\
	[\cf5 "Play"\cf2 , \cf4 Color\cf2 .black, \cf4 Color\cf2 .green],\
	[\cf5 "Stop"\cf2 , \cf4 Color\cf2 .white, \cf4 Color\cf2 .red],\
];\
b2.action = \{ \cf4 arg\cf2  view; \
	\cf4 var\cf2  msg;\
	if (view.value == 1, \{\
		isOn = \cf4 true\cf2 ;\
		msg = [\cf5 "/s_new"\cf2 , \cf5 "trem"\cf2 , 2001, 1, 0];\
		values.keysValuesDo(\{ \cf4 arg\cf2  key, value; \
			msg = msg.addAll([key, value]); \
		\});\
		server.performList(\cf6 \\sendMsg\cf2 , msg); \
	\},\{\
		isOn = \cf4 false\cf2 ;\
		server.sendMsg(\cf5 "/n_free"\cf2 , 2001); \
	\});\
\};\
b2.enabled = server.serverRunning;\
d.nextLine;\
\
f.value(\cf6 \\freq\cf2 , \cf6 \\freq\cf2 );\
f.value(\cf6 \\rate\cf2 , \cf6 \\lofreq\cf2 );\
f.value(\cf6 \\amp\cf2 , \cf6 \\amp\cf2 , \cf6 \\db\cf2 );\
\
a = \cf4 SimpleController\cf2 (server);\
f = \{ \cf4 arg\cf2  server; \
	b1.enabled = server.serverRunning;\
	b2.enabled = server.serverRunning;\
	if (server.serverRunning.not, \{ b2.value = 0 \});\
\};\
a.put(\cf6 \\serverRunning\cf2 , f);\
w.onClose = \{ \
	if (isOn, \{ server.sendMsg(\cf5 "/n_free"\cf2 , 2001) \});\
 	a.remove;\
\};\
\
w.front;\
)\
\
\cf3 ////////////////////////////////////////////////////////////////////////\cf2 \
\
\
(\
\cf3 // create a GUI window with some SCPopUpMenus.\cf2 \
\cf4 var\cf2  w, n, f, s, a;\
w = \cf4 GUI\cf2 .window.new(\cf5 "popup menu test"\cf2 , \cf4 Rect\cf2 (128, 64, 260, 110));\
w.view.decorator = f = \cf4 FlowLayout\cf2 (w.view.bounds);\
a = [\cf5 "linear"\cf2 , \cf6 \\exponential\cf2 , \cf5 "very long item name"\cf2 , \cf6 \\sine\cf2 , \cf5 "welch"\cf2 , \cf5 "curve -2"\cf2 , \cf5 "db fader"\cf2 , \cf5 "squared"\cf2 , \cf5 "cubed"\cf2 ];\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
\
f.nextLine;\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
n.value = 5;\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
n.background = \cf4 Color\cf2 .red;\
\
n = \cf4 GUI\cf2 .popUpMenu.new(w, \cf4 Rect\cf2 (0,0,80,22));\
n.items = a;\
n.background = \cf4 Color\cf2 .blue;\
n.stringColor = \cf4 Color\cf2 .white;\
n.value = 3;\
n.action = \{ \cf4 arg\cf2  view; view.value.postln; \};\
\
f.nextLine;\
\
s = \cf4 GUI\cf2 .slider.new(w, \cf4 Rect\cf2 (0,0,240,24));\
\
w.front;\
)\
}