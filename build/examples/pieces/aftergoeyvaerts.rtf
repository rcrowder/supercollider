{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 //after goeyvaerts\cf0 \
\cf2 //(C) Nick Collins 2007\cf0 \
\
\
\pard\pardeftab560\ql\qnatural
\cf2 //first send the SynthDefs; make sure the Server is on\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 SynthDef\cf0 (\cf4 \\goeysynth\cf0 , \{\
\cf3 arg\cf0  freq=440,amp=0.1, sustain=0.1, pan=0.0; \
\cf3 var\cf0  source, env;\
\
source= \cf3 LPF\cf0 .ar(\cf3 Mix\cf0 (\cf3 LFPar\cf0 .ar(freq*[0.999,1.001],0,amp)).distort,\cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 ([10000,2000,4000,1000],[0.005,\cf3 Rand\cf0 (0.009,0.05),0.005])));\
\
env= \cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 ([0,1,0.4,0.7,0],[\cf3 Rand\cf0 (0.001,0.005),0.005,0.005,sustain]), doneAction:2);\
\
\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(source*env,pan))\
\
\}).send(s);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //preferred version if you have the FreeVerb UGen, commented out by default\cf0 \
\cf2 //SynthDef(\\goeyfx, \{\cf0 \
\cf2 //ReplaceOut.ar(0,FreeVerb.ar(In.ar(0,2),0.33,1.5))\cf0 \
\cf2 //\}).send(s);\cf0 \
\
\cf2 //adapted from JmC reverb\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 SynthDef\cf0 (\cf4 \\goeyfx\cf0 , \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  a,c,z,y,in;\
c = 2; \cf2 // number of comb delays\cf0 \
a = 3; \cf2 // number of allpass delays\cf0 \
\
in=\cf3 In\cf0 .ar(0,2);\
\cf2 // reverb predelay time :\cf0 \
z = \cf3 DelayN\cf0 .ar(in, 0.048,0.048);\
\
\cf2 //for delaytime if want modulation-	//LFNoise1.kr(0.1.rand, 0.04, 0.05)\cf0 \
y=\cf3 Mix\cf0 .arFill(c,\{\cf3 CombL\cf0 .ar(z,0.1,rrand(0.01, 0.1),5)\});\
	\
\cf2 // chain of 4 allpass delays on each of two channels (8 total) :\cf0 \
a.do(\{ y = \cf3 AllpassN\cf0 .ar(y, 0.051, [rrand(0.01, 0.05),rrand(0.01, 0.05)], 1) \});\
	\
\cf2 // add original sound to reverb and play it :\cf0 \
\cf3 Out\cf0 .ar(0,(0.2*y));\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\}).send(s);\
\
)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 Synth\cf0 (\cf4 \\goeysynth\cf0 ,[\cf4 \\freq\cf0 ,440]); \cf2 //test\cf0 \
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //now run the piece\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 var\cf0  n, octaves, basenote, selections, probs;\
\cf3 var\cf0  ioirow, ioimult, noterow, amprow, susrow, panrow;\
\cf3 var\cf0  fxsynth;\
\
n=12; \cf2 //notes per octave\cf0 \
\
fxsynth= \cf3 Synth\cf0 (\cf4 \\goeyfx\cf0 );\
\
noterow=(0..(n-1)).scramble; \cf2 //[4,0,5,14,13,15,21,19,20,11,6,10]%12; \cf0 \
amprow= \cf3 Pseq\cf0 ((1,3..36).neg.dbamp.scramble,\cf3 inf\cf0 ).asStream;\
susrow= \cf3 Pseq\cf0 ((((1..37)/37).exp/exp(1)).scramble,\cf3 inf\cf0 ).asStream;\
panrow= \cf3 Pseq\cf0 ((((0..31)/31)*2-1).scramble,\cf3 inf\cf0 ).asStream;\
\
ioimult=0.1;\
\
ioirow= n**(((1..n).scramble)/n); \cf2 //exponential spacing 1 to n\cf0 \
ioirow= \cf3 Pseq\cf0 (ioirow,\cf3 inf\cf0 ).asStream;\
\
basenote=36;\
octaves=4;\
selections= \cf3 Array\cf0 .fill(n,\{0\});\
probs=\cf3 Array\cf0 .fill(n,\{1.0\});\
\
\{\
\
\cf3 inf\cf0 .do\
\{	\
	\cf3 var\cf0  notenow;\
	\
	if(ioimult.coin,\{ioimult=[0.01,0.025,0.05,0.1,0.2].choose;\});\
	\
	if(0.03.coin,\{selections= \cf3 Array\cf0 .fill(n,\{0\});\});\
	if(0.02.coin,\{octaves= rrand(2,5);\});\
	if(0.01.coin,\{basenote=rrand(35,47);\});\
	\
	\cf2 //recovery rate\cf0 \
	probs.do\{\cf3 |val,i|\cf0  if(val<0.9999,\{probs[i]=probs[i]+0.1\})\};\
		\
	s.makeBundle(s.latency, \{	\
		[1,2,3,4,5].wchoose([0.5,0.35,0.1,0.025,0.025]).do\{	\
			notenow= noterow.wchoose(probs.normalizeSum);\
\
			probs[notenow]=0.1;\
			\
			selections[notenow]=selections[notenow]+1;\
	\
			\cf3 Synth\cf0 .before(fxsynth, \cf4 \\goeysynth\cf0 ,[\cf4 \\freq\cf0 , ((((selections[notenow]%octaves)*12)+ basenote) + ((notenow/n)*12)).midicps,\cf4 \\amp\cf0 ,(amprow.next)*0.2, \cf4 \\sustain\cf0 , susrow.next, \cf4 \\pan\cf0 , panrow.next]);\
			\
		\};\
		\
	\});\
	\
	((ioirow.next)*ioimult).wait;\
\};\
\
\}.fork;\
\
)\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //future possibilities:\cf0 \
\cf2 //add different rhythmic sections, and also, use fold or wrap on array data\cf0 \
\cf2 //up to four notes at once in selection; optional slight spread? really need independent voices too\cf0 \
}