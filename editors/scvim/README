SCVIM
  created by Alex Norman, it is in its early stages, use at your own risk
  this is SCVIM-svn
  the webpage is here: http://www.x37v.info/scvim/
  if you have improvements/suggestions email alex at x37v dot info
________________________________________________________________________________

REQUIREMENTS:
- vim
- sh
- supercollider (sclang)

OPTIONAL:
- gvim
- unhtml or links, unrtf and ruby (to make updated help docs)
  * it is best to use your distro's unhtml package but incase your distro
    doesn't have it, I've placed a version here: 
    http://www.x37v.info/scvim/files/unhtml_2.3.9.tar.gz
________________________________________________________________________________

INSTALLATION STEPS:

1) Put this ("scvim") directory into your SuperCollider Extensions directory.
    (on linux, typically /usr/local/share/SuperCollider/Extensions)
   Make sure that this folder is sourced in your .sclang.cfg file.
   * You can put the scvim directory somewhere else if you please, just make
     sure that you have the SCVim supercollider class sourced in your
     .sclang.cfg ie:
   +$SCVIM_DIR/scclasses

2) Create an environment variable SCVIM_DIR that points to where you put this
   directory, i.e. add this line into your .bashrc file: 
     export SCVIM_DIR=/usr/local/share/SuperCollider/Extensions/scvim
   
3) Optional, but handy: Add "scvim" and "scgvim" aliases to your shell 
    environment by adding this line to the appropriate file (e.g. add it to 
    ~/.bash_profile or ~/.bash_aliases):
      source $SCVIM_DIR/bash_scvim_aliases

4) Add the following line to your ~/.vimrc file (which might not exist yet):
      source $SCVIM_DIR/scvimrc
    You can edit scvimrc to change keybindings etc.

Now you should be ready to use scvim, e.g. by running "scvim" or "scgvim" from
a command prompt.
________________________________________________________________________________

OPTIONAL EXTRA INSTALLATION STEPS:

* I put this in my ~/.sclang.sc so that each time I start sclang I have updated
    Object completion and highlighting, as well as Object Definition Lookup:
    //set up the scvim stuff 
    SCVim.updateCaches
  You'll probably want to execute this at least once after an install of
  supercollider to get the most up-to-date Object info

* sclang's working directory defaults to /tmp when using scvim. If you want to 
    set it to something else you can set the bash environment variable 
    SCLANG_RUNDIR

* I've put the colorscheme that I use in the "extra" folder.  This makes 
    strings, symbols and chars variations on the same color but all look 
    different.  Feel free to use/modify it to your liking.
________________________________________________________________________________

USAGE:

defaults (most work in both command and insert mode): 

:SClangStart starts/restarts the interpreter in an xterm
  (if you want to recompile the supercollider library just type :SClangStart and you'll
   kill the current interpreter, start up a new one and have a recompiled library)
:SClangKill
   kills the xterm/interpreter
(exiting vim also kills the interpreter)

F5 sends a whole block (looks for the outermost parens and sends that data)
F6 sends a single line (the line the cursor is currently on)
F7 calls TempoClock.default.clear;
F8 calls s.freeAll;
F12 calls thisProcess.stop; (i.e. the same as cmd-. on Mac)

in visual mode F5 and F6 both send the whole visual block

use :SChelp to get to SC help topics, or use K on a word (in command mode)
   (this has tab completion)
use :SCdef to see the class definitions for an object, or use ^k (in command or normal mode)
   on a word (this also has tab completion)

These key bindings can all be changed through editing your scvimrc file.
________________________________________________________________________________

HELP DOCS:

scvim uses preprocessed versions of the help files (converted to plain-text), 
and to update these help files from the main files you can run the following
line in sclang:

  SCVim.updateHelpCache

This actually calls a Ruby script called scvim_make_help.rb, so can be used 
outside SC if desired. You can do something like:

  ./scvim_make_help.rb -c -s /usr/local/share/SuperCollider/Help

This will delete any help docs that are in your scvim/docs dir, and copy in the
more up to date [hopefully] docs from /usr/local/share/SuperCollider/Help to
that dir [after they are formatted].  If you have help docs in more than one
location you can now copy in more help docs by doing

  ./scvim_make_help -s <other location>

or you can do it all in one go by specifying multiple sources

  ./scvim_make_help -c -s /usr/local/share/SuperCollider/Help -s <other location>
________________________________________________________________________________

THANKS:

Dan Stowell for his help:
   converting the SuperCollider code into a class, improving the README, getting scvim
   into the SuperCollider svn, etc.
John Yates for providing the indent functionality [which I have changed slightly] and
   help with the help file processor
Andrzej Kopec for work on removing html from help [though scvim ended up using unhtml]
