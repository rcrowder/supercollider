class:: ProgramChangeResponder
summary:: allow functions to be registered to respond to MIDI program change events
related:: Classes/MIDIResponder, Classes/CCResponder
categories:: Control, MIDI


ClassMethods::

method::new

argument::function
A link::Classes/Function:: to be evaluated. Arguments passed to the function are: src, chan, value.

argument::src
The src number may be the system UID (obtained from code:: MIDIClient.sources[index].uid ::) or the index of the source in the code:: MIDIClient.sources :: array. nil matches all.

argument::chan
An link::Classes/Integer:: between 0 and 15 that selects which MIDI channel to match. nil matches all. May also be a link::Classes/Function:: which will be evaluated to determine the match. eg: { |val| val < 2 }

argument::num
An link::Classes/Integer:: between 0 and 127 that selects which program change number to match. nil matches all. May also be a link::Classes/Function:: which will be evaluated to determine the match. eg: { |val| val >= 4 }

argument::value
An link::Classes/Integer:: between 0 and 127 to filter values. nil matches all. May also be a link::Classes/Function:: which will be evaluated to determine the match. eg: { |val| val < 50 }

argument::install
If true, install the responder automatically so it is active and ready to respond. If false, then it will be inactive.

Examples::

code::
(
	c = ProgramChangeResponder({ |src,chan,val|
		[src,chan,val].postln;
		},
		nil, // any source
		nil, // any channel
		nil // any value
	)
)

c.remove
::

code::
(
	c = ProgramChangeResponder({ |src,chan,val|
		[src,chan,val].postln;
		},
		nil, // any source
		nil, // any channel
		(50..60) // within this value range
	)
)

c.remove
::
