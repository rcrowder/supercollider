class::Char
summary::ascii characters
categories:: Core

description::
Chars may be written as literals using the $ sign. For example $a, $b, $c.
See link::Reference/Literals::

Chars may be created from Integers using the Integer methods asAscii and asDigit.

instancemethods::

subsection::conversion

method::ascii

answers the integer ascii value of a Char.

method::digit

answers an integer value from 0 to 9 for chars $0 to $9, and values 10 to 35 for chars $a to $z
or $A to $Z.

method::toUpper

answers the upper case version of a char. Nonalphabetic chars return themselves.

method::toLower

answers a lower case version of a char. Nonalphabetic chars return themselves.

subsection:: Testing

method::isAlpha

answers whether the char is an alphabetic character.

method::isAlphaNum

answers whether the char is an alphabetic or numeric character.

method::isPrint

answers whether the char is printable.

method::isPunct

answers whether the char is a punctuation character

method::isSpace

answers whether the char is white space.

method::isDecDigit
 
 answers whether the char is a decimal digit $0 to $9.
 
method::isFileSafe
 
 answers whether the char is safe for use as in a filename.
 excludes the path separators / and : 
 
code:: 
 for(0,255,{ arg i;
	var a;
	[i,a = i.asAscii,a.isAlphaNum,a.isPrint,a.isPunct,a.isControl].postln;
});
::

 
