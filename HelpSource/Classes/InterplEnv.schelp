class:: InterplEnv
summary:: envelope specification
related:: Classes/IEnvGen, Classes/Env
categories:: Control, Envelopes

description::
An InterplEnv is a specification for a segmented envelope. InterplEnvs can be used both server-side, by an link::Classes/IEnvGen:: within a SynthDef, and clientside, with methods such as at. An InterplEnv can have any number of segments. An InterplEnv can have several shapes for its segments.

subsection::Differences between InterplEnv and Env
InterplEnvs do not have release or loop nodes.  They are of a fixed duration. Mostly, it is meant to be used with IEnvGen, where 'times' are actually an strong::index into the envelope:: shape.

ClassMethods::

private::initClass

method::new
Create a new envelope specification.

argument::levels
an array of levels. The first level is the initial value of the envelope.

argument::times
an array of durations of segments in seconds. There should be one fewer duration than there are levels.

argument::curve
this parameter determines the shape of the envelope segments.
The possible values are:
list::
## 'step' - flat segments
## 'linear' - linear segments, the default
## 'exponential' - natural exponential growth and decay. In this case, the levels must all be nonzero and the have the same sign.
## 'sine' - sinusoidal S shaped segments.
## 'welch' - sinusoidal segments shaped like the sides of a Welch window.
## a link::Classes/Float:: - a curvature value for all segments.
## An link::Classes/Array:: of Floats - curvature values for each segments.
::

argument::offset
used to offset an envelope into negative starttimes.

InstanceMethods::

private::prAsArray

method::plot
Plot this envelope's shape in a window.

argument::size
The size of the plot.

method::asArray
Converts the InterplEnv to an Array in a specially ordered format. This allows for InterplEnv parameters to be settable arguments in a link::Classes/SynthDef::.

subsection::Client-side Access and Stream Support

method::at
Returns the value of the InterplEnv at time.
code::
InterplEnv([0, 1, 0.707], [0.2, 1.3], [\lin, \sin]).at(0.5);
::
