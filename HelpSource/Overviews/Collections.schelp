title:: Collections
summary:: A hierarchical overview of Collection subclasses
categories:: Collections
related:: Classes/Collection

SuperCollider has a rich hierarchy of Collection subclasses, detailed below. Subclasses of a given class are indented (sub-lists) relative to the class. Classes labelled "abstract" are not for direct use, but classes lower down the tree may inherit methods from them. For this reason it is important to consult the helpfiles of classes farther up the tree in order to get a complete list of available methods.

section:: Hierarchy

tree:: link::Classes/Collection:: - abstract superclass of all Collection subclasses; many methods are inherited from this class
	## tree:: link::Classes/SequenceableCollection:: - abstract superclass of collections whose objects can be indexed by integer
		## tree:: link::Classes/ArrayedCollection:: - abstract superclass of Collections of fixed maximum size whose elements are held in a vector of slots
			## link::Classes/Array:: - an ArrayedCollection whose slots may contain any object; more efficient than List
			## tree:: link::Classes/RawArray:: - abstract superclass of array classes that hold raw data values
				## tree:: link::Classes/FloatArray:: - a RawArray of floats
					## link::Classes/Wavetable:: - a special format FloatArray
					## link::Classes/Signal:: - a FloatArray that represents a sampled function of time buffer
				::
				## link::Classes/DoubleArray:: - a RawArray of double precision floats
				## link::Classes/String:: - an array of characters
				## link::Classes/SymbolArray:: - a RawArray of symbols
				## link::Classes/Int32Array:: - a RawArray of 32 bit Integers
				## link::Classes/Int16Array:: - a RawArray of 16 bit Integers
				## link::Classes/Int8Array:: - a RawArray of 8 bit Integers
			::
		::
		## tree:: link::Classes/Order:: - an order of elements with a numerical index
			## link::Classes/SparseArray:: - an array of elements optimized for huge gaps between them
		::
		## link::Classes/LinkedList:: - a doubly linked list
		## tree:: link::Classes/List:: - an expandable SequenceableCollection (compare to ArrayedCollection and Array)
			## link::Classes/SortedList:: - a List whose items are kept in a sorted order
		::
		## link::Classes/RingBuffer:: - a SequenceableCollection functioning like a fixed size ringbuffer
	::
	## tree:: link::Classes/Set:: - an unordered collection of unequal objects
		## tree:: link::Classes/Dictionary:: - an unordered associative collection mapping keys to values
			## tree:: link::Classes/IdentityDictionary:: - a Dictionary wherein keys match only if identical (rather than if simply equal)
				## tree:: link::Classes/Environment:: - an IdentityDictionary, one of which is always current; useful for creating sets of persistent variables
					## link::Classes/Event:: - a Dictionary mapping names of musical parameters to their values
				::
			::
		::
		## tree:: link::Classes/IdentitySet:: - an unordered collection of unidentical objects (compare to Set)
			## link::Classes/OrderedIdentitySet:: - a set according to identity
		::
	::
	## tree:: link::Classes/Array2D:: - a two dimensional array
	::
	## tree:: link::Classes/Range:: - ranges of values
	::
	## tree:: link::Classes/Interval:: - ranges of Integers with a fixed Interval between them
	::
	## tree:: link::Classes/MultiLevelIdentityDictionary:: - a tree of IdentityDictionaries
		## tree:: link::Classes/LibraryBase:: - abstract global storage class
			## link::Classes/Library:: - a unique global MultiLevelIdentityDictionary for keeping objects in a central place
			## link::Classes/Archive:: - a unique global MultiLevelIdentityDictionary for storing objects to file
		::
	::
	## tree:: link::Classes/Bag:: - an unordered collection of objects
		## link::Classes/IdentityBag:: - a bag according to identity
	::
	## tree:: link::Classes/Pair:: - Lisp-like two element cells
	::
	## tree:: link::Classes/TwoWayIdentityDictionary:: - an IdentityDictionary which allows easy searching by both key and value; faster than IdentityDictionary on reverse lookup, but with more memory overhead
		## link::Classes/ObjectTable:: - a TwoWayIdentityDictionary for associating Integer ids with objects
	::
::
