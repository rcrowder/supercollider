building on win64
-----------------

- first get and install:
  - visual studio 2013 community (it's free)
  - Qt 5.4 msvc2013_64, put it in C:\Qt

- edit build.bat, set the folders right.

run build.bat, this runs cmake that builds the solution.

then it will run msbuild to build the solution.

deploying
---------

run install.bat.

it will use cmake to install SC to a staging folder, then will robocopy that folder, 
along with QT and the other required DLLs to C:\SuperCollider

If you want c:\Program Files\SuperCollider, you'll have to fix the bug where it can't handle the space.



Old info about dlls
-------------------

this is outdated info. don't do this. but it might be helpful making a script to deploy all the dlls
to the vs2013\build\lang\Debug\ folder, for if you want to debug from VS or something.

deploy_vs_post_build_hook.bat, when set as a Post-Build-Event for ALL-BUILD, will deploy all the files to c:\supercollider.

ALL_BUILD-->preferences-->Build Events-->Post Build Event:

$(SolutionDir)..\deploy.bat $(SolutionDir) $(Configuration) $(Platform)

or manually copy into c:\supercollider the dlls.

DLLs to deploy:
Everything from QT
portaudio_x64.dll
libsndfile-1.dll


Build files to deploy
C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\editors\sc-ide\Debug\scide.exe
C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\lang\Debug\sclang.exe
C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\server\scsynth\Debug\scsynth.exe

C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\editors\sc-ide\Release\scide.exe
C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\lang\Release\sclang.exe
C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\server\scsynth\Release\scsynth.exe

the ugens.. use deploy.bat, it will put them in the right spot for release/debug

from the commandline:

deploy.bat C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\ Release x64
deploy.bat C:\Users\lucas\Documents\GitHub\supercollider\vs2013\build\ Debug x64
